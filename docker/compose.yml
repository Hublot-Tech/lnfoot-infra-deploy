services:
  api:
    image: ghcr.io/luvnationdev/ln-foot-api:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - lnfoot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/categories"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - keycloak-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KC_DB_URL_DATABASE}
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    networks:
      - lnfoot

  keycloak:
    image: ghcr.io/marcjazz/keycloak-auth-theme:latest
    env_file:
      - keycloak/.env
    ports:
      - "8081:8080"
    networks:
      - lnfoot
    command:
      - "start-dev"
      - "--import-realm"
      - "--spi-theme-static-max-age=-1"
      - "--spi-theme-cache-themes=false"
      - "--spi-theme-cache-templates=false"
    restart: unless-stopped
    volumes:
      - ./keycloak/config/:/opt/keycloak/data/import/:ro

  minio:
    image: minio/minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    entrypoint: ["/usr/local/bin/docker-entrypoint.sh"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      # JSON policy for the app client (read/write access to the specific bucket)
      APP_CLIENT_POLICY_NAME: "app-client-rw-policy"
      APP_CLIENT_POLICY_JSON: |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "s3:ListBucket",
                        "s3:GetObject",
                        "s3:PutObject",
                        "s3:DeleteObject"
                    ],
                    "Resource": [
                        "arn:aws:s3:::${MINIO_BUCKET_NAME}",
                        "arn:aws:s3:::${MINIO_BUCKET_NAME}/*"
                    ]
                }
            ]
        }
    volumes:
      - minio-data:/data
      - ./minio-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
    networks:
      - lnfoot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

volumes:
  keycloak-db:
  minio-data:

networks:
  lnfoot:
    driver: bridge
