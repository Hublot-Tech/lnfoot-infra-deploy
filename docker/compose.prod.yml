services:
  api:
    image: ghcr.io/luvnationdev/ln-foot-api:latest
    restart: unless-stopped
    depends_on:
      - minio
      - postgres
      - keycloak
    env_file:
      - .env
    networks:
      - lnfoot
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/api/categories']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./postgres-init/init-db.sh:/docker-entrypoint-initdb.d/init-app-db.sh
    env_file:
      - postgres-init/.env
    networks:
      - lnfoot

  adminer:
    image: adminer
    container_name: adminer
    environment:
      - ADMINER_PLUGINS=tables-filter tinymce edit-calendar dump-date
    volumes:
      - ./adminer/theme/adminer-dark.css:/var/www/html/adminer.css
    restart: unless-stopped
    networks:
      - lnfoot

  keycloak:
    image: ghcr.io/marcjazz/keycloak-auth-theme:latest
    env_file:
      - keycloak/.env
    environment:
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - lnfoot
    command:
      - 'start'
      - '--import-realm'
      - '--spi-theme-static-max-age=-1'
      - '--spi-theme-cache-themes=false'
      - '--spi-theme-cache-templates=false'
    restart: unless-stopped
    volumes:
      - ./keycloak/config/:/opt/keycloak/data/import/:ro

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    entrypoint: ['/usr/local/bin/docker-entrypoint.sh']
    restart: unless-stopped
    env_file:
      - minio/.env
    environment:
      APP_CLIENT_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      APP_CLIENT_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
      - ./minio/entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      # Mount the policy file from your host into the container
      - ./minio/app-client-policy.json:/app_client_policy.json
    networks:
      - lnfoot
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  caddy:
    image: caddy:latest
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - '80:80'
      - '443:443'
    networks:
      - lnfoot

volumes:
  prostgres-db:
  minio-data:
  minio-config:
  omnidb_data:

networks:
  lnfoot:
    driver: bridge
